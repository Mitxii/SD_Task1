# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import chat_pb2 as proto_dot_chat__pb2


class ChatServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterClient = channel.unary_unary(
                '/ChatServer/RegisterClient',
                request_serializer=proto_dot_chat__pb2.Client.SerializeToString,
                response_deserializer=proto_dot_chat__pb2.Boolean.FromString,
                )
        self.ConnectChat = channel.unary_unary(
                '/ChatServer/ConnectChat',
                request_serializer=proto_dot_chat__pb2.ConnectionRequest.SerializeToString,
                response_deserializer=proto_dot_chat__pb2.Boolean.FromString,
                )
        self.ListenConnections = channel.unary_unary(
                '/ChatServer/ListenConnections',
                request_serializer=proto_dot_chat__pb2.Client.SerializeToString,
                response_deserializer=proto_dot_chat__pb2.Client.FromString,
                )
        self.AnswerConnection = channel.unary_unary(
                '/ChatServer/AnswerConnection',
                request_serializer=proto_dot_chat__pb2.AnswerRequest.SerializeToString,
                response_deserializer=proto_dot_chat__pb2.Boolean.FromString,
                )
        self.SendMessageTo = channel.unary_unary(
                '/ChatServer/SendMessageTo',
                request_serializer=proto_dot_chat__pb2.SendMessage.SerializeToString,
                response_deserializer=proto_dot_chat__pb2.Empty.FromString,
                )
        self.ReceiveMessageFrom = channel.unary_unary(
                '/ChatServer/ReceiveMessageFrom',
                request_serializer=proto_dot_chat__pb2.ReceiveMessage.SerializeToString,
                response_deserializer=proto_dot_chat__pb2.Message.FromString,
                )


class ChatServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConnectChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListenConnections(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AnswerConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessageTo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveMessageFrom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterClient': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterClient,
                    request_deserializer=proto_dot_chat__pb2.Client.FromString,
                    response_serializer=proto_dot_chat__pb2.Boolean.SerializeToString,
            ),
            'ConnectChat': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectChat,
                    request_deserializer=proto_dot_chat__pb2.ConnectionRequest.FromString,
                    response_serializer=proto_dot_chat__pb2.Boolean.SerializeToString,
            ),
            'ListenConnections': grpc.unary_unary_rpc_method_handler(
                    servicer.ListenConnections,
                    request_deserializer=proto_dot_chat__pb2.Client.FromString,
                    response_serializer=proto_dot_chat__pb2.Client.SerializeToString,
            ),
            'AnswerConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.AnswerConnection,
                    request_deserializer=proto_dot_chat__pb2.AnswerRequest.FromString,
                    response_serializer=proto_dot_chat__pb2.Boolean.SerializeToString,
            ),
            'SendMessageTo': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessageTo,
                    request_deserializer=proto_dot_chat__pb2.SendMessage.FromString,
                    response_serializer=proto_dot_chat__pb2.Empty.SerializeToString,
            ),
            'ReceiveMessageFrom': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceiveMessageFrom,
                    request_deserializer=proto_dot_chat__pb2.ReceiveMessage.FromString,
                    response_serializer=proto_dot_chat__pb2.Message.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ChatServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChatServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ChatServer/RegisterClient',
            proto_dot_chat__pb2.Client.SerializeToString,
            proto_dot_chat__pb2.Boolean.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConnectChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ChatServer/ConnectChat',
            proto_dot_chat__pb2.ConnectionRequest.SerializeToString,
            proto_dot_chat__pb2.Boolean.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListenConnections(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ChatServer/ListenConnections',
            proto_dot_chat__pb2.Client.SerializeToString,
            proto_dot_chat__pb2.Client.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AnswerConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ChatServer/AnswerConnection',
            proto_dot_chat__pb2.AnswerRequest.SerializeToString,
            proto_dot_chat__pb2.Boolean.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMessageTo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ChatServer/SendMessageTo',
            proto_dot_chat__pb2.SendMessage.SerializeToString,
            proto_dot_chat__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReceiveMessageFrom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ChatServer/ReceiveMessageFrom',
            proto_dot_chat__pb2.ReceiveMessage.SerializeToString,
            proto_dot_chat__pb2.Message.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
